const mongoose = require("mongoose");

const uruSchema = new mongoose.Schema({
    userId: { type: String, required: true }, // Add this field to store the user's unique ID
  applicantName: { type: String, required: true },
  sex: { type: String, required: true },
  dateOfBirth: { type: Date, required: true },
  address: { type: String, required: true },
  district: { type: String, required: true },
  state: { type: String, required: true },
  pinCode: { type: String, required: true },
  educationalQualification: { type: String, required: true },
  whatsappMobileNumber: { type: String, required: true },
  emailId: { type: String, required: true },
  occupation: { type: String, required: true },
  recordCategory: { type: String, required: true },
  recordTitle: { type: String, required: true },
  recordDescription: { type: String, required: true },
  purposeOfRecordAttempt: { type: String, required: true },
  dateOfAttempt: { type: Date, required: true },
  recordVenue: { type: String, required: true },
  organisationName: { type: String },
  googleDriveLink: { type: String },
  facebookLink: { type: String },
  youtubeLink: { type: String },
  instagramLink: { type: String },
  linkedInLink: { type: String },
  xLink: { type: String },
  pinterestLink: { type: String },
  otherMediaLink: { type: String },
  photoUrl: { type: String },
  videoUrl: { type: String },
  documentUrl: { type: String },
  status: { type: String, enum: ["Pending", "Approved", "Rejected"], default: "Pending" },
  price: { type: Number, default: 0 },
  paymentStatus: { type: String, enum: ["Success", "Failed", "Pending"], default: "Pending" },
  razorpayOrderId: { type: String },
  razorpayPaymentId: { type: String },
  razorpaySignature: { type: String } ,
    price: { type: Number, default: 0 },
  priceUpdated: { type: Boolean, default: false },
  priceUpdatedDate: { type: String },
});

module.exports = mongoose.model("URU", uruSchema);